openapi: 3.0.0
info:
  title: twitter-like-sns
  version: '1.0'
  description: 'for https://github.com/KituneUdon/twitter-like-sns'
servers:
  - url: 'http://localhost:3000'
paths:
  /v1/microposts:
    parameters: []
    get:
      summary: Get microposts
      operationId: get-microposts
      description: query paramで指定されたユーザのmicropost一覧を取得する
      responses:
        '200':
          description: OK
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  microposts:
                    type: array
                    items:
                      $ref: '#/components/schemas/micropost'
              examples:
                example-1:
                  value:
                    microposts:
                      - userId: 123456
                        userName: テストユーザ
                        micropost: テスト投稿
                        micropostId: 1
                        createAt: '2021-03-21 11:00:00'
                      - userId: 123456
                        userName: テストユーザ
                        micropost: テスト投稿
                        micropostId: 2
                        createAt: '2021-03-19 12:00:00'
                      - userId: 123456
                        userName: テストユーザ
                        micropost: テストテストテスト
                        micropostId: 3
                        createAt: '2021-03-10 12:34:52'
                      - userId: 123456
                        userName: テストユーザ
                        micropost: テスト投稿
                        micropostId: 4
                        createAt: '2020-03-19 12:00:00'
          headers: {}
      parameters:
        - schema:
            type: integer
          in: query
          name: userId
          example: 123456
          required: true
      tags:
        - microposts
    post:
      summary: ''
      operationId: post-microposts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  micropostId:
                    type: integer
      parameters: []
      description: micropostを投稿する機能
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                micropost:
                  type: string
              required:
                - userId
                - micropost
            examples:
              example-1:
                value:
                  userId: 123456
                  micropost: test
      tags:
        - microposts
  /v1/userprofile:
    get:
      summary: Your GET endpoint
      tags:
        - user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/userProfile'
              examples:
                example-1:
                  value:
                    user:
                      displayName: テストユーザ
                      postedNumber: 20
                      followerCount: 42
                      followingCount: 48
      operationId: get-user
      parameters:
        - schema:
            type: integer
          in: query
          name: userId
          description: user-idを指定する
      description: 一人のユーザプロフィールを取得する
    parameters: []
  /v1/follow:
    post:
      summary: ''
      operationId: post-follow
      responses:
        '200':
          description: OK
      description: ユーザフォロー機能
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                followFromUserId:
                  type: integer
                followToUserId:
                  type: integer
      tags:
        - follow
    delete:
      summary: ''
      operationId: delete-follow
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                unfollowFromUserId:
                  type: string
                unfollowToUserId:
                  type: string
      description: フォロー解除
      tags:
        - follow
    parameters: []
components:
  schemas:
    micropost:
      title: microposts
      type: object
      x-examples:
        example-1:
          userId: 123456
          userName: テストユーザ
          micropost: テスト投稿
          micropostId: '1'
          createAt: '2021-03-21 11:00:00'
      properties:
        userId:
          type: integer
        userName:
          type: string
        micropost:
          type: string
        micropostId:
          type: integer
        createAt:
          type: string
    userProfile:
      title: userProfile
      type: object
      properties:
        displayName:
          type: string
        postedNumber:
          type: integer
        followerCount:
          type: integer
        followingCount:
          type: integer
      x-examples:
        example-1:
          displayName: test
          postedNumber: 0
          followerCount: 0
          followingCount: 0
tags:
  - name: follow
  - name: microposts
  - name: user
